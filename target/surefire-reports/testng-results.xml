<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Driver is initialized Successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2022-03-19T14:24:19 IST" name="Automation" finished-at="2022-03-19T14:24:46 IST" duration-ms="26489">
    <groups>
      <group name="regression">
        <method signature="PracticeForm.SeleniumCommands()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="SeleniumCommands" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.UploadImage()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="UploadImage" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.selectContinents()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="selectContinents" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.enterName()[pri:1, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="enterName" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.selectGender()[pri:2, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="selectGender" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.yearOfExperiece()[pri:3, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="yearOfExperiece" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.selectProfession()[pri:4, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="selectProfession" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.selectAutomationTools()[pri:5, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="selectAutomationTools" class="com.techlistic.tests.PracticeForm"/>
        <method signature="PracticeForm.enterDate()[pri:7, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="enterDate" class="com.techlistic.tests.PracticeForm"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="PracticeForm.enterName()[pri:1, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" name="enterName" class="com.techlistic.tests.PracticeForm"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2022-03-19T14:24:19 IST" name="Regression test" finished-at="2022-03-19T14:24:46 IST" duration-ms="26489">
      <class name="com.techlistic.tests.PracticeForm">
        <test-method is-config="true" signature="asetup()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:20 IST" name="asetup" finished-at="2022-03-19T14:24:25 IST" duration-ms="5217" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Driver is initialized Successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- asetup -->
        <test-method signature="SeleniumCommands()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:25 IST" name="SeleniumCommands" finished-at="2022-03-19T14:24:25 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SeleniumCommands -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:25 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:27 IST" duration-ms="2011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="UploadImage()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:27 IST" name="UploadImage" finished-at="2022-03-19T14:24:27 IST" duration-ms="64" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument
  (Session info: chrome=99.0.4844.74)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-DKAMDAI', ip: '192.168.0.48', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9cc4d9c569bbd6f3c7f656bfad610c5c, clickElement {id=c76d0d6c-6973-4672-a24b-20796a7446b2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\PCP\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:53044}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53044/devtoo..., se:cdpVersion: 99.0.4844.74, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (9cc4d9c569bbd6f3c7f656bfad610c5c)] -> css selector: input[class='input-file']]
Session ID: 9cc4d9c569bbd6f3c7f656bfad610c5c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument
  (Session info: chrome=99.0.4844.74)
Build info: version: '4.1.2', revision: '9a5a329c5a'
System info: host: 'DESKTOP-DKAMDAI', ip: '192.168.0.48', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9cc4d9c569bbd6f3c7f656bfad610c5c, clickElement {id=c76d0d6c-6973-4672-a24b-20796a7446b2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: C:\Users\PCP\AppData\Local\...}, goog:chromeOptions: {debuggerAddress: localhost:53044}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53044/devtoo..., se:cdpVersion: 99.0.4844.74, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (9cc4d9c569bbd6f3c7f656bfad610c5c)] -> css selector: input[class='input-file']]
Session ID: 9cc4d9c569bbd6f3c7f656bfad610c5c
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at com.techlistic.tests.PracticeForm.UploadImage(PracticeForm.java:88)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UploadImage -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:27 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:29 IST" duration-ms="2001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="selectContinents()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:29 IST" name="selectContinents" finished-at="2022-03-19T14:24:29 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectContinents -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:29 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:31 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="enterName()[pri:1, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:32 IST" name="enterName" finished-at="2022-03-19T14:24:32 IST" duration-ms="919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterName -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:32 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:34 IST" duration-ms="2008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="selectGender()[pri:2, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:34 IST" name="selectGender" finished-at="2022-03-19T14:24:35 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectGender -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:35 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:37 IST" duration-ms="2007" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="yearOfExperiece()[pri:3, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:37 IST" name="yearOfExperiece" finished-at="2022-03-19T14:24:37 IST" duration-ms="192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- yearOfExperiece -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:37 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:39 IST" duration-ms="2014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="selectProfession()[pri:4, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:39 IST" name="selectProfession" finished-at="2022-03-19T14:24:39 IST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectProfession -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:39 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:41 IST" duration-ms="2013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="selectAutomationTools()[pri:5, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:41 IST" name="selectAutomationTools" finished-at="2022-03-19T14:24:41 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAutomationTools -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:41 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:43 IST" duration-ms="2002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method signature="enterDate()[pri:7, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:43 IST" name="enterDate" finished-at="2022-03-19T14:24:43 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterDate -->
        <test-method is-config="true" signature="waitSeeResult()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:43 IST" name="waitSeeResult" finished-at="2022-03-19T14:24:45 IST" duration-ms="2005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitSeeResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.techlistic.tests.PracticeForm@6e9a5ed8]" started-at="2022-03-19T14:24:45 IST" name="tearDown" finished-at="2022-03-19T14:24:46 IST" duration-ms="733" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.techlistic.tests.PracticeForm -->
    </test> <!-- Regression test -->
  </suite> <!-- Automation -->
</testng-results>
